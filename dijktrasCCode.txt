dijktrasAlgorithm(Hex[] graph, int start, int end){
  int i;
  int v;
  int w;
  int weight;
  int distance;
  boolean[] intree = new boolean[234];
  int[] distance = new int[234];
  int[] parent = new int[234];
  for (int i = 1 ; i <= 233 ; i++){
   intree[i] = FALSE ;
   distance[i]=Integer.MAX_VALUE; //global const MAXINT=max integer
  parent[i] = -1 ;
  }
  distance[start] = 0 ;
  v = start ;
  while ( !intree[v] ){
    intree[v] = TRUE ;
    //maybe call get edges here
    // p = g-> edges[v] ;//these edges are the neighbors of the selected tile v
    while ( p != NULL ){
        w = p->y ;
        weight = p->weight ;
        if ( distance[w] > (distance[v] + weight) ) {
            distance[w] = distance[v] + weight ;
            parent[w] = v ;
        }
        p = p->next ;
      }
      v = 1 ;
      dist = MAXINT ;
      for ( i = 1 ; i <= g->nvertices ; i++ )
        if ( !intree[i] && (dist > distance[i]) ){
          dist = distance[i] ;
          v = i ;
        }
}
